apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: semanticbus
    tier: frontend
spec:
  type: LoadBalancer
  loadBalancerIP: 146.148.24.26
  ports:
    # the port that this service should serve on
  - port: 80
  selector:
    app: semanticbus
    tier: frontend
---

apiVersion: v1
kind: ReplicationController
metadata:
  name: frontend
  # these labels can be applied automatically
  # from the labels in the pod template if not set
  labels:
    app: semanticbus
    tier: frontend
spec:
  # this replicas value is default
  # modify it according to your case
  replicas: 4
  # selector can be applied automatically
  # from the labels in the pod template if not set
  # selector:
  #   app: guestbook
  #   tier: frontend
  template:
    metadata:
      labels:
        app: semanticbus
        tier: frontend
    spec:
      containers:
      - name: semanticbus-front
        image: semanticbus/semanticbus
        resources:
          requests:
            cpu: 600m
            memory: 2000Mi
        env:
        - name: GET_HOSTS_FROM
          value: env
          # value: dns
          # If your cluster config does not include a dns service, then to
          # instead access environment variables to find service host
          # info, comment out the 'value: dns' line above, and uncomment the
          # line below.
          # value: env
        - name: PORT
          value: "80"
        - name: AMQPHOST
          value: "dataPlayersProd"
        ports:
        - containerPort: 80

---


apiVersion: certmanager.k8s.io/v1alpha1
kind: Issuer
metadata:
  name: letsencrypt-staging
  namespace: default
spec:
  acme:
    # The ACME server URL
    server: https://acme-staging.api.letsencrypt.org/directory
    # Email address used for ACME registration
    email: semanticbusdev@gmail.com
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-staging
    # Enable the HTTP-01 challenge provider
    http01: {}
---

apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: semantic-bus-org
  namespace: default
spec:
  secretName: semantic-bus-org-tls
  issuerRef:
    name: letsencrypt-staging
  commonName: prod.semantic-bus.org
  dnsNames:
  - prod.semantic-bus.org
  acme:
    config:
    - http01:
        ingress: test-ingress
      domains:
      - prod.semantic-bus.org

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: test-ingress
spec:
  rules:
  - host: prod.semantic-bus.org
    http:
      paths:
      - path: /
        backend:
          serviceName: frontend
          servicePort: 80
  tls:
  - secretName: semantic-bus-org-tls
    hosts: 
    - prod.semantic-bus.org
